name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    env:  
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      MONGODB_PUBLIC_KEY: ${{ secrets.MONGODB_PUBLIC_KEY }}
      MONGODB_PRIVATE_KEY: ${{ secrets.MONGODB_PRIVATE_KEY }}
      MONGODB_PROJECT_ID: ${{ secrets.MONGODB_PROJECT_ID }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3
      
      - name: Wait for MongoDB Atlas to update
        run: sleep 30

      - name: Get GitHub Actions Runner Public IP
        id: get_ip
        run: |
          echo "Fetching Public IP..."
          PUBLIC_IP=$(curl -s ifconfig.me)
          echo "Public IP: $PUBLIC_IP"
          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV

      - name: Add Public IP to MongoDB Atlas
        run: |
          echo "Adding IP to MongoDB Atlas..."
          curl -X POST "https://cloud.mongodb.com/api/atlas/v1.0/groups/${{ secrets.MONGODB_PROJECT_ID }}/accessList" \
            -u "${{ secrets.MONGODB_PUBLIC_KEY }}:${{ secrets.MONGODB_PRIVATE_KEY }}" \
            -H "Content-Type: application/json" \
            --data-raw "{ \"ipAddress\": \"${{ env.PUBLIC_IP }}\", \"comment\": \"GitHub Actions Runner\" }"

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22.x"
          cache: "npm"
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: Install backend dependencies
        run: npm ci
        working-directory: ./backend

      - name: Lint backend
        run: npm run lint
        working-directory: ./backend

      - name: Debug MongoDB Connection
        run: |
          if [[ -z "${{ secrets.MONGODB_URI }}" ]]; then
            echo "❌ Ошибка: MONGODB_URI пустой!"
            exit 1
          else
            echo "✅ MONGODB_URI загружен"
          fi

      - name: Run backend tests
        run: npm test
        working-directory: ./backend

      - name: Install frontend dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Lint frontend
        run: npm run lint
        working-directory: ./frontend

#      - name: Run frontend tests
#        run: npm test
#        working-directory: ./frontend



